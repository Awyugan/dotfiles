<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/python

import sys

def normtable(text):
    "Right-aligns columns in a tab-separated text table."
    
    # Start by turning the text into a list of lines.
    lines = text.splitlines()
    rows = len(lines)
        
    # Extract the content into a matrix.
    # Keep track of the number of cells per row.
    columns = 0
    content = []
    for line in lines:
        cells = line.split('\t')
        if len(cells) &gt; columns: columns = len(cells)
        linecontent = [ x.strip() for x in cells ]
        content.append(linecontent)
    
    # Append cells to rows that don't have enough.
    rows = len(content)
    for i in range(rows):
        while len(content[i]) &lt; columns:
            content[i].append('')
    
    # Get the width of the content in each column.
    # The minimum width will be 0.
    widths = [0] * columns
    for row in content:
        for i in range(columns):
            widths[i] = max(len(row[i]), widths[i])
    
    # Add whitespace to make all the columns the same width.
    # Separate columns with 2 spaces 
    formatted = []
    for row in content:
        formatted.append('  '.join([ s.rjust(n) for (s, n) in zip(row, widths) ]))
        
    # Return the formatted table.
    return '\n'.join(formatted)

        
# Read the input, process, and print.
unformatted = sys.stdin.read()   
print normtable(unformatted)
</string>
	<key>fallbackInput</key>
	<string>none</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^~@	</string>
	<key>name</key>
	<string>Tabs to Gnuplot Table</string>
	<key>output</key>
	<string>replaceSelectedText</string>
	<key>scope</key>
	<string>text</string>
	<key>uuid</key>
	<string>2561C900-0090-4EB8-9A70-0E5991FF5391</string>
</dict>
</plist>
